@charset "utf-8";

/* <FONTS> */

/*
@font-face {
	font-family: 'FONT_FAMILY';
	src: url('PATH_TO_FONT_FILE');
}
*/

/* <VARIABLES> */

/*
:root {
}
*/

/* <ANIMATIONS> */

/*
@keyframes ANIMATION_NAME {
	0%		{ PROPERTY }
	100%	{ PROPERTY }
}
*/

/* <EXTRAS> */

/*
::-moz-selection {
	background-color: #d91c88;
	color: white;
}

::selection {
	background-color: #d91c88;
	color: white;
}

:-ms-input-placeholder	{ color: #939393; }
::placeholder			{ color: #939393; }
*/

/* <GENERAL> */

*:focus { outline: 0; }

html, body {
	/* Footer at bottom */
	height: 100%;
}

html {
	font-size: var(--text-size-default);
	-webkit-font-kerning: normal;
	/*-webkit-font-smoothing: antialiased;*/
	/*-moz-osx-font-smoothing: grayscale;*/
	font-kerning: normal;
	text-rendering: optimizeLegibility;
}

body {
	font-family: var(--font-default);
	padding: 0;
	margin: 0;
	background-color: var(--color-body);
	color: var(--color-text-default);

	/* Footer at bottom */
	display: flex;
	flex-direction: column;
}

body > * {
	/* Footer at bottom */
	flex-shrink: 0;
}

h1, h2, h3, h4, h5, h6 {
	font-weight: bold;
	font-family: var(--font-title);
}

h1 { font-size: 3em;	margin: 1.1em  0; }
h2 { font-size: 1.7em;	margin: 1em    0; }
h3 { font-size: 1.17em;	margin: 1.07em 0; }
h4 { font-size: 1em;	margin: 1.12em 0; }
h5 { font-size: 0.83em;	margin: 1.5em  0; }
h6 { font-size: 0.75em;	margin: 1.67em 0; }

p {
	margin: 1.5em 0;
	line-height: 1.5em;
}

a {
	text-decoration: none;
	cursor: pointer;
	color: var(--color-link);
}

a:hover {
	text-decoration: underline;
	color: var(--color-link-hover);
}

/* <GENERIC CLASSES> */

.hidden {
	display: none !important;
}

.spacer {
	display: block;
	width: 100%;
	margin: var(--gutter-medium) 0 0 0;
	padding: 0;
	background-color: transparent;
}

/* Progress Bar */

.progress-bar {
	display: block;
	width: 100%;
	height: 5px;
	border-radius: 3px;
	margin: var(--gutter-thin) 0;
	background-color: var(--color-text-xxxxxlight);
	position: relative;
}

.progress-bar > .progress {
	display: block;
	position: absolute;
	top: 0;
	left: 0;
	height: inherit;
	border-radius: inherit;
	width: 42%;
	background-color: var(--color-highlight);
	transition: width 200ms ease;
}

/* Loading Dots */

.loading-dots {
	width: 6px !important;
	height: 6px !important;
	background-color: var(--color-text-xxxlight);
	border-radius: 50%;
	position: relative;
	animation-name: loading-dots;
	animation-duration: 700ms;
	animation-iteration-count: infinite;
	animation-delay: 0ms;
	margin: 10px auto 10px auto;
	display: none;
}

.loading-dots.loading {
	display: block;
}

.loading-dots::before,
.loading-dots::after {
	content: '';
	width: inherit;
	height: inherit;
	background-color: inherit;
	border-radius: inherit;
	position: absolute;
	top: 0;
}

.loading-dots::before {
	left: -8px;
	animation-name: loading-dots;
	animation-duration: 700ms;
	animation-iteration-count: infinite;
	animation-delay: 100ms;
}

.loading-dots::after {
	right: -8px;
	animation-name: loading-dots;
	animation-duration: 700ms;
	animation-iteration-count: infinite;
	animation-delay: 200ms;
}

/* <HEADER> */

header {
	width: 100%;
	height: var(--header-height);
	display: flex;
	background-color: var(--color-header);
}

.header__container {
	width: 100%;
	max-width: 1280px;
	margin: auto;
	display: flex;
	flex-direction: row;
	justify-content: flex-end;
	align-items: center;
	padding-left: calc(3 * var(--gutter-default));
	padding-right: calc(3 * var(--gutter-default));
	box-sizing: border-box;
	position: relative;
}

.header__logo {
	margin-right: auto;
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	align-items: center;
	color: var(--color-nav-link);
	font-family: var(--font-title);
	text-decoration: none !important; /* In case there's text. */
}

.header__logo :not(:first-child) {
	margin-left: var(--gutter-thin);
}

.header__logo > img {
	margin: auto;
	height: calc(var(--header-height) * 0.5);
	max-width: 257px;
}

/* <NAV> */

nav {
	display: flex;
	align-items: center;
	box-sizing: border-box;
	flex-shrink: 0;
}

nav > a {
	font-family: var(--font-title);
	text-decoration: none;
	opacity: 0.92;
	transition: opacity 250ms ease,
				transform 250ms ease;
}

nav > a:hover {
	opacity: 1;
	text-decoration: none;
}

/* <BURGER MENU> */

.nav__burger-menu {
	flex-shrink: 0;
	flex-direction: column;
	justify-content: space-between;
	align-items: center;
	cursor: pointer;
	width: calc(var(--burger-menu-width) * 0.9);
	height: calc(var(--burger-menu-height) * 0.9);
	margin-left: var(--gutter-default);
	z-index: 3001;
	transition: height 200ms ease;
}

.nav__burger-menu:hover,
.nav__burger-menu.cross {
	height: calc(var(--burger-menu-height-unfolded) * 0.9);
}

.nav__burger-menu div {
	width: 100%;
	height: var(--burger-menu-bar-height);
	background-color: var(--color-burger-menu);
	border-radius: calc(var(--burger-menu-bar-height) / 2);
	/* To inverse, use calc(var(--burger-menu-bar-height) / 2) for both */
	transform-origin: calc(100% - var(--burger-menu-bar-height) / 4)
					  calc(var(--burger-menu-bar-height) / 2);
	transition: transform 200ms ease,
				opacity 200ms ease,
				background-color 200ms ease;
}

.nav__burger-menu.cross div {
	background-color: var(--color-burger-menu-alt);
}

.nav__burger-menu.cross div:nth-child(1) { transform: rotate(-45deg); }
.nav__burger-menu.cross div:nth-child(2) { opacity: 0; }
.nav__burger-menu.cross div:nth-child(3) { transform: rotate(45deg); }

/* <FOOTER> */

footer {
	width: 100%;
	/* 'auto' for footer at bottom */
	margin: auto 0 0 0;
	display: flex;
	background-color: var(--color-footer);
	color: var(--color-text-light);
}

.footer__container {
	width: 100%;
	max-width: 1280px;
	margin: auto;
	padding: var(--gutter-default) calc(3 * var(--gutter-default));
	box-sizing: border-box;
	font-size: var(--text-size-small);
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	align-items: center;
}

.footer__main {
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	align-items: flex-start;
	flex-wrap: wrap;
}

.footer__main > :not(:last-child) {
	/* Margin right so lines aligns left when wrapped. */
	margin-right: var(--gutter-medium);
}

.footer__explore {
	margin-left: auto;
	display: flex;
	flex-direction: row;
	justify-content: flex-end;
	align-items: flex-start;
	flex-wrap: wrap;
}

.footer__explore > * {
	/* First element included, so it makes a margin from .footer__main. */
	margin-left: var(--gutter-medium);
}

footer p {
	margin: 0;
	line-height: 2em;
}

/* <MAIN> */

/*
 * <main> is like a frame, it has no particular formatting.
 * It's supposed to hold <section>s that act like widgets.
 */

main {
	width: 100%;
	margin: auto;
	padding: calc(1 * var(--gutter-default)) 0; /* Completed by sections' padding. */

	/* Footer at bottom */
	flex-grow: 1;
	flex-basis: auto;
}

main > * {
	box-sizing: border-box;
}

main > :first-child {
	margin-top: 0;
}

/* <Centered Layout> */

main.centered {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

/* <SECTIONS> */

/*
 * <main> is composed of <section>s.
 * They are like widgets we put into a frame.
 */

section {
	width: 100%;
	box-sizing: border-box;
	padding: var(--gutter-default);
}

section > :first-child {
	margin-top: 0;
}

section > :last-child {
	margin-bottom: 0;
}

/* <Section Centered> */

section.centered {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

/* <Section No Padding> */

section.no-padding.hv {
	padding: 0;
}

section.no-padding.h {
	padding-left: 0;
	padding-right: 0;
}

section.no-padding.v {
	padding-top: 0;
	padding-bottom: 0;
}

/* <Section Error> */

/*
 * For HTTP errors:
 *
 * section
 *     - h1 -> error
 *     - p -> error description
 */

section.error {
	text-align: center;
	padding-bottom: calc(2 * var(--gutter-default));
}

section.error > h1 {
	font-size: 6em;
	margin-bottom: 0;
}

section.error > h1 + p {
	color: var(--color-text-light);
	margin: 1em 0;
}

/* <Section Text> */

/*
 * For content (e.g. articles)
 *
 * section
 *     - *
 */

section.text {
	max-width: 800px;
	margin: auto;
	position: relative;
	padding-right: 5%;
}

.pre-heading {
	margin: 0;
	font-family: var(--font-code);
	font-size: var(--text-size-medium);
	color: var(--color-text-xxlight);
}

.pre-heading + h1, .pre-heading + h2, .pre-heading + h3,
.pre-heading + h4, .pre-heading + h5, .pre-heading + h6 {
	margin-top: var(--gutter-medium);
}

/* <FORM> */

form {
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: flex-start;
	padding: var(--gutter-default);
	box-sizing: border-box;
}

label {
	font-weight: bold;
	margin: var(--gutter-xthin) 0;
}

.form__label-relative {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: flex-end;
	margin: var(--gutter-xthin) 0;
}

.form__label-relative > label {
	margin: 0;
}

/* <FORM INPUTS> */

/* Placeholder */

::placeholder			{ color: var(--color-disabled); }
:-ms-input-placeholder	{ color: var(--color-disabled); }

/* Inputs - Regular */

input,
textarea,
button,
.link-button,
select,
.select-wrapper,
.form__label-relative {
	margin: var(--gutter-thin) 0;
}

.form__label-relative:not(:first-child),
label:not(:first-child) {
	margin-top: var(--gutter-thin);
}

.form__label-relative > label {
	margin-top: 0;
}

* + input,
* + textarea,
* + button,
* + .link-button,
* + select,
* + .select-wrapper,
* + .form__label-relative {
	margin-top: 0;
}

input[type=text],
input[type=password],
input[type=email],
input[type=url],
input[type=number],
textarea,
select {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	height: var(--input-height-default);
	padding: 4px 8px 4px 8px;
	box-sizing: border-box;
	border: 1px solid var(--color-text-xxxlight);
	border-radius: var(--border-radius-default);
	font-family: inherit;
	font-size: 1rem;
	color: var(--color-text-default);
	font-weight: normal;
	background-color: white;
}

textarea {
	min-height: 67px;
	resize: vertical;
}

/* Selects */

.select-wrapper {
	display: inline-block;
	box-sizing: border-box;
	position: relative;
}

.select-wrapper::after {
	content: '';
	position: absolute;
	top: calc(50% - (0.8em / 2));
	right: var(--gutter-thin);
	width: 0.8em;
	height: 0.8em;
	background-image: url('img/arrow-down--dark.svg');
	background-repeat: no-repeat;
	background-size: contain;
	background-position: center;
	pointer-events: none;
}

.select-wrapper > select {
	margin: 0;
}

select {
	width: 100%;
	cursor: pointer;
}

/* Inputs - Regular - :FOCUS */

input[type=text]:focus,
input[type=password]:focus,
input[type=email]:focus,
input[type=url]:focus,
input[type=number]:focus,
textarea:focus,
select:focus{
	border-color: var(--color-highlight);
	box-shadow: 0 0 0 3px var(--color-highlight-halo);
}

/* Inputs - Regular - :READ-ONLY || :DISABLED  */

input[type=text]:read-only,
input[type=text]:disabled,
input[type=password]:read-only,
input[type=password]:disabled,
input[type=email]:read-only,
input[type=email]:disabled,
input[type=url]:read-only,
input[type=url]:disabled,
input[type=number]:read-only,
input[type=number]:disabled,
textarea:read-only,
textarea:disabled,
select:disabled {
	color: var(--color-disabled);
}

/* Buttons - Regular */

button,
input[type=submit],
input[type=reset],
.link-button {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
	display: inline-block;
	height: var(--input-height-default);
	margin: 0;
	padding: 4px 8px 4px 8px;
	box-sizing: border-box;
	white-space: nowrap;
	border: 1px solid var(--color-text-xxxlight);
	border-radius: var(--border-radius-default);
	font-family: inherit;
	font-size: 1rem;
	color: var(--color-text-default);
	background-color: white;
	box-shadow: var(--shadow-thin);
	cursor: pointer;
	transition: color 200ms ease,
	box-shadow 200ms ease;
}

.link-button {
	line-height: calc(var(--input-height-default) - 8px);
	vertical-align: middle;
	text-align: center;
}

/* Buttons - Regular - :HOVER */

button:hover,
input[type=submit]:hover,
input[type=reset]:hover,
.link-button:hover {
	color: var(--color-text-dark);
	box-shadow: var(--shadow-default);
	text-decoration: none;
}

/* Buttons - Regular - :ACTIVE */

button:active,
input[type=submit]:active,
input[type=reset]:active,
.link-button:active {
	box-shadow: var(--shadow-thin);
}

/* Buttons - Highlight */

button.highlight,
input[type=submit].highlight,
input[type=reset].highlight,
.link-button.highlight {
	color: white;
	background-color: var(--color-highlight);
	border: none;
}

/* Buttons - Highlight - :HOVER */

button.highlight:hover,
input[type=submit].highlight:hover,
input[type=reset].highlight:hover,
.link-button.highlight:hover {
	color: white;
}

/* Buttons - Delete */

button.delete,
input[type=submit].delete,
input[type=reset].delete,
.link-button.delete {
	color: white;
	background-color: var(--color-danger);
	border: none;
}

/* Buttons - Delete - :HOVER */

button.delete:hover,
input[type=submit].delete:hover,
input[type=reset].delete:hover,
.link-button.delete:hover {
	color: white;
}

/* Buttons - Add */

button.add:hover::after,
input[type=submit].add:hover::after,
input[type=reset].add:hover::after,
.link-button.add:hover::after {
	content: '';
	display: inline-block;
	width: 0.8em;
	height: 0.8em;
	margin-left: 8px;
	background-image: url('img/plus--light.svg');
	background-size: contain;
	background-position: center center;
	background-repeat: no-repeat;
}

/* Buttons - Loader - (Normal State) */

button.loader:hover::after,
.link-button.loader:hover::after {
	content: '';
	display: inline-block;
	width: 0.8em;
	height: 0.8em;
	margin-left: 8px;
	animation: shake 500ms linear 1s infinite;
	background-image: url('img/arrow-up--light.svg');
	background-size: contain;
	background-position: center center;
	background-repeat: no-repeat;
}

/* Buttons - Loading (When Loading Data) */

button.loader.loading::after,
.link-button.loader.loading::after {
	transition: width 2s ease;
	content: '';
	display: inline-block;
	width: 0.8em;
	height: 0.8em;
	margin-left: 8px;
	animation: loading 1s ease infinite;
	background-image: url('img/loading-dots--light.svg');
	background-size: contain;
	background-position: center center;
	background-repeat: no-repeat;
}

/* Buttons - Loaded - (Data Finished Loading) */

button.loader.loaded::after,
.link-button.loader.loaded::after {
	content: '';
	display: inline-block;
	width: 0.9em;
	height: 0.9em;
	margin-left: 8px;
	animation: none;
	background-image: url('img/checkmark--light.svg');
	background-size: contain;
	background-position: center center;
	background-repeat: no-repeat;
}

/* Buttons - Loading Failed - (Error While Loading Data) */

button.loader.failed::after,
.link-button.loader.failed::after {
	content: '';
	display: inline-block;
	width: 0.7em;
	height: 0.7em;
	margin-left: 8px;
	animation: none;
	background-image: url('img/cross--light.svg');
	background-size: contain;
	background-position: center center;
	background-repeat: no-repeat;
}

/* Buttons - Regular || Highlight || Delete - :DISABLED */

button:disabled,
button.highlight:disabled,
button.delete:disabled,
input[type=submit]:disabled,
input[type=submit].highlight:disabled,
input[type=submit].delete:disabled,
input[type=reset]:disabled,
input[type=reset].highlight:disabled,
input[type=reset].delete:disabled,
.link-button.disabled,
.link-button.highlight.disabled,
.link-button.delete.disabled {
	/*
		!important because it should overwrite any other
		class, like 'delete' or 'highlight'
	*/
	color: white !important;
	background-color: var(--color-disabled) !important;
	border-color: var(--color-disabled) !important;
	cursor: default !important;
	transition: none !important;
	box-shadow: none !important;
}

/* Buttons - Regular || Highlight || Delete - :DISABLED :HOVER */

button:disabled:hover::after,
button.highlight:disabled:hover::after,
button.delete:disabled:hover::after,
input[type=submit]:disabled:hover::after,
input[type=submit].highlight:disabled:hover::after,
input[type=submit].delete:disabled:hover::after,
input[type=reset]:disabled:hover::after,
input[type=reset].highlight:disabled:hover::after,
input[type=reset].delete:disabled:hover::after,
.link-button.disabled:hover::after,
.link-button.highlight.disabled:hover::after,
.link-button.delete.disabled:hover::after {
	display: none !important;
}

/* Checkboxes */

input[type=checkbox] {
	display: none;
}

input[type=checkbox] + label {
	--input-checkbox-width: calc(var(--input-height-default) * 1.23);
	--input-checkbox-height: calc((var(--input-height-default) / 3) * 2);
	--input-checkbox-button-diameter: calc(var(--input-checkbox-height) * 0.9);
	--input-checkbox-button-margin: calc((var(--input-checkbox-height) - var(--input-checkbox-button-diameter)) / 2);
	--input-checkbox-not-checked-button-left: var(--input-checkbox-button-margin);
	--input-checkbox-checked-button-left: calc(var(--input-checkbox-width) - var(--input-checkbox-button-diameter) - var(--input-checkbox-button-margin));

	font-weight: normal;
	box-sizing: border-box;
	margin-top: calc((var(--input-height-default) - var(--input-checkbox-height)) / 2);
	margin-bottom: calc((var(--input-height-default) - var(--input-checkbox-height)) / 2);
}

input[type=checkbox] + label > span {
	display: inline-block;
	vertical-align: middle;
	margin-right: var(--gutter-thin);
	width: var(--input-checkbox-width);
	height: var(--input-checkbox-height);
	background-color: var(--color-text-xxxxxlight);
	border-radius: calc(var(--input-checkbox-height) / 2);
	cursor: pointer;
	position: relative;
	box-shadow: var(--shadow-inset-default);
	transition: background-color 200ms ease;
}

input[type=checkbox] + label > span:hover {
	background-color: var(--color-text-xxxxlight);
}

input[type=checkbox]:checked + label > span {
	background-color: var(--color-highlight);
}

input[type=checkbox] + label > span::after {
	content: '';
	display: block;
	position: absolute;
	width: var(--input-checkbox-button-diameter);
	height: var(--input-checkbox-button-diameter);
	top: var(--input-checkbox-button-margin);
	left: var(--input-checkbox-not-checked-button-left);
	background-color: white;
	border-radius: 50%;
	box-shadow: var(--shadow-default);
	transition: left 200ms ease;
}

input[type=checkbox]:checked + label > span::after {
	left: var(--input-checkbox-checked-button-left);
}

/* <MARKDOWN> */

/* TODO: this shit */
.markdown-container .markdown-heading {
	font-family: var(--font-title);
	font-weight: bold;
	font-size: 1.17em;
	margin: 0 0 0.7em 0;
	padding: 0;
}

.markdown-container hr {
	border: none;
	border-top: 1px solid #e4e8ed;
	margin: 1.5em 0 1.7em 0;
}

.markdown-container ul,
.markdown-container ol {
	list-style-position: inside;
	padding-left: var(--gutter-default);
}

.markdown-container .inline-code {
	background-color: rgba(27, 31, 35, 0.05);
	border-radius: 3px;
	padding: 1px 4px;
	font-family: 'Courier New', 'Courier', monospace;
}

/* <RESPONSIVE> */

/* Down to 1081px */
@media all and (min-width: 1081px) {

	nav > a {
		margin-left: calc(2.3 * var(--gutter-default));
	}
}

/* Up to 1080px */
@media all and (max-width: 1080px) {

	nav > a {
		margin-left: calc(1.7 * var(--gutter-default));
	}
}

/* Up to to 920px */
@media all and (max-width: 920px) {

	h1 { font-size: 2.5em; margin: 1em  0; }
	h2 { font-size: 1.5em; }

	.header__container {
		padding-left: calc(1.5 * var(--gutter-default));
		padding-right: calc(1.5 * var(--gutter-default));
	}

	nav > a {
		margin-left: calc(1 * var(--gutter-default));
	}

	.footer__container {
		padding-left: calc(1.5 * var(--gutter-default));
		padding-right: calc(1.5 * var(--gutter-default));
	}
}

/* Down to 701px */
@media all and (min-width: 701px) {

	nav {
		flex-direction: row;
		justify-content: flex-end;
	}

	nav > a {
		color: var(--color-nav-link);
		transition: margin-left 200ms ease;
	}

	nav > a:first-child {
		margin-left: 0;
	}

	nav > a:hover {
		color: var(--color-nav-link-hover);
	}

	.nav__burger-menu {
		/*	display: flex;*/
		display: none;
	}
}

/* Up to 700px */
@media all and (max-width: 700px) {

	header {
		height: var(--header-height-alt);
	}

	.header__container {
		padding-left: calc(var(--gutter-default));
		padding-right: calc(var(--gutter-default));
	}

	.header__logo > img {
		height: calc(var(--header-height-alt) * 0.75);
	}

	nav {
		position: fixed;
		top: 120vh;
		left: 0;
		margin: 0;
		width: 100%;
		height: 100%;
		z-index: 3000;
		background-color: var(--color-default-transparent); /* For transition. */
		flex-direction: column;
		justify-content: center;
		transition: top 500ms ease,
					background-color 500ms ease;
	}

	nav.shown {
		top: 0vh;
		background-color: var(--color-default);
	}

	nav > a {
		color: var(--color-nav-link-alt);
		margin-left: 0;
		margin-bottom: 25px;
		text-transform: uppercase;
		font-size: var(--text-size-big);
	}

	nav > a:hover {
		color: var(--color-nav-link-hover-alt);
		transform: translateY(-5px);
	}

	/* Underlined links on hover.*/
	/*nav > a::after {
		content: '';
		display: block;
		width: 0px;
		margin: 0px auto;
		height: 2px;
		background-color: var(--color-nav-link-alt);
		border-radius: 1px;
		transition: width 250ms ease-out,
		transform 250ms ease-out;
	}

	nav > a:hover::after {
		width: 100%;
		transform: translateY(5px);
	}*/

	.nav__burger-menu {
		display: flex;
	}

	.footer__container {
		padding-left: calc(var(--gutter-default));
		padding-right: calc(var(--gutter-default));
	}
}

/* Up to 375px */
@media all and (max-width: 375px) {

	h1 { font-size: 2em; margin: 1em  0; }
	h2 { font-size: 1.3em; }

	main {
		padding: var(--gutter-medium) 0;
	}

	.header__logo > img {
		/* .nav__burger-menu has flex-shrink: 0;
		so it takes max space without compressing
		the burger menu. */
		max-width: 100%;
		margin-left: 0;
	}

	section.text {
		padding: var(--gutter-medium);
	}
}

/* <HOVER EFFECTS> */

/* User can't use :hover properly */
@media all and (any-hover: none) {

	nav > a:hover {
		opacity: 1;
	}

	nav > a::after {
		content: unset;
		display: unset;
		width: unset;
		margin: unset;
		height: unset;
		background-color: unset;
		box-shadow: unset;
		border-radius: unset;
		transition: unset;
	}

	nav > a:hover::after {
		width: unset;
		transform: unset;
	}

	.nav__burger-menu:hover {
		height: calc(var(--burger-menu-height) * 0.9);
	}

	.nav__burger-menu.cross:hover {
		height: calc(var(--burger-menu-height-unfolded) * 0.9);
	}
}
