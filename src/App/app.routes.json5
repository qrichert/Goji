{
	"home": {
		// If you have multiple languages, use 'routes' with an 's'
		routes: {
			/*
			 * Keyword 'all' means the page is is not tied to a specific language
			 * If you don't need translation, use 'route' instead (see "some-other-page")
			 * Here it just means that '/' (no page specified) is tied to the home page
			 * and also that it doesn't force any language. If French is selected, and we load
			 * /home, English will replace French as the new language. Whereas with 'all', it won't.,
			 */
			all: "/",
			// 'en_US' and 'en_GB' are two separate pages (but are both in English).
			// Note that you can't have two different pages with the same variant
			// (like if we had en_GB -> /home). In that case, the first occurrence
			// would always be selected (here en_US). If you don't want to support
			// variants, use the syntax that is used for French below.
			en_US: "/home",
			// Ame
			en_GB: "/welcome",
			// BrE

			// 'fr_FR' means French, without any particular variant (usually that's what you want)
			// Here there are two paths pointing to the same page for french (first one will be used as default)
			fr: [
				"/accueil",
				"/bienvenue"
			],
		},
		/*
		 * 'controller' is the controller to which the page is tied to.
		 *
		 * In this example, the "home" controller is \App\Controller\HomeController
		 * in /src/App/Controller/HomeController.class.php
		 *
		 * The class is imported and called automatically, this is why you have to make it
		 * implement \Goji\Blueprints\ControllerAbstract.
		 *
		 * The importer is smart, so you only need to specify Module/ClassName, it will transform it
		 * automatically to the full path \Module\Controller\ClassName (/ will be converted to \).
		 *
		 * For example:
		 * - HomeController                -> Controller\HomeController
		 * - App/HomeController            -> App\Controller\HomeController
		 * - Controller/HomeController     -> Controller\HomeController
		 * - App\Controller\HomeController -> App\Controller\HomeController
		 */
		controller: "App/HomeController"
	},
	"contact": {
		routes: {
			all: "/contact"
			// If you add another language that has a different word for 'contact',
			// you can add it as simply as doing:
			//it: "/contatto"
		},
		controller: "App/ContactController"
	},
	"xhr-contact": {
		route: "/xhr-contact",
		controller: "App/XhrContactController"
	},
	"privacy-and-terms": {
		routes: {
			en: "/privacy-and-terms",
			fr: "/mentions-legales"
		},
		controller: "App/PrivacyAndTermsController"
	},

	// <FUNNEL>
	"landing-page": {
		route: "/landing-page",
		controller: "App/LandingPageController"
	}
}
