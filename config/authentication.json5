/*
 * Configuration file for \Goji\Core\Firewall and \Goji\HumanResources\Authentication
 */

{
	login: {
		/*
		 * ID of the route to redirect to if current page is forbidden (see routes.json5)
		 */
		route: "login",
		/*
		 * Redirect to when log in is successful
		 * Last page in history if possible, else "home" (route ID)
		 * If you want a constant page, just do 'redirect_to: "page"'
		 */
		redirect_to: ["_last", "home"]
	},
	forbidden: {
		/*
		 * Redirect to when accessing forbidden page (page ID) (disallow_authenticated)
		 * If none use 'null', in which case it will emit a 403 error
		 */
		redirect_to: "home"
	},
	firewall: {
		/*
		 * List of route IDs that will redirect to the login page if user not logged in.
		 * This will look for the info you've set for 'login'
		 * Always use a dictionary/associative array. If none, leave empty ({})
		 * Uses the roles set in 'hr' config file
		 */
		require_authentication: {
			"root": [
				"xhr-admin-clear-cache",
				"xhr-admin-update"
			],
			"admin": [
				"xhr-admin-add-member",
				"xhr-admin-back-up-database",
				"admin-analytics",
				"xhr-admin-analytics",
			],
			"editor": [
				"admin",
				"xhr-admin-in-page-content-edit",
				"admin-blog-post",
				"xhr-admin-blog-post"
			],
			/*
			 * Pages where you don't need a specific role, just need to be logged in
			 * For example, could be pages common to all users, like a dashboard or account settings
			 * Don't add 'logout' because it would redirect to login page instead of 'home' as it does by default.,
			 */
			"any": [
				"settings",
				"xhr-settings-password"
			]
		},
		/*
		 * List of route IDs that can't be accessed of logged in.
		 * If none, leave empty
		 * This will look for the info you've set for 'forbidden',
		 */
		disallow_authenticated: [
			"sign-up",
			"xhr-sign-up",
			"verify-email",
			"xhr-verify-email-not-received",
			"login",
			"xhr-login",
			"xhr-reset-password-request",
			"reset-password",
			"xhr-reset-password"
		]
	}
}
