/*
---------------------------------------------------------------------
The original file is passwords.json5, but it can't be versioned since
it contains sensible data (i.e. passwords). To use this file, create a
duplicate and rename it "passwords.json5".
---------------------------------------------------------------------
*/

/*
 * Configuration file for \Goji\Security\Passwords
 */

{
	// These are reserved properties (used in \Goji\Security\Passwords
	// and \Goji\Security\reCaptcha respectively), though they are not
	// mandatory, you can leave them out if you want, things won't crash.

	/*
	 * Pepper are characters you add to passwords to make them stronger by default.
	 * So, even if someone's password was 'dog', what would be hashed and stored is '_pepper_dog_pepper_'
	 *
	 * Pepper is different from salt as it is constant, and not variable.
	 *
	 * Be careful with pepper though, it's not necessarily safer. It adds to the strength of the
	 * password if compromise of the database does not imply compromise of the application (where
	 * the pepper is store in clear text, meaning this very file). But if access to the database
	 * also means access to application code (like default in Goji with SQLite which doesn't run
	 * on a separate server), it's useless.
	 *
	 * It can also be a huge mess if you ever need to change it. One strategy would be to rehash the
	 * password with the new pepper on login. So on login, check credentials with the old pepper against
	 * the old hashed password. If it's valid, rehash the clear password (user input, but verified) with
	 * the updated pepper.
	 */
	pepper_before: "§$*-à0és:/;=ù+^°",
	pepper_after: "`z$d(§€££$€èà(!'",

	google_captcha_public_key: "",
	google_captcha_private_key: ""

	// You can also add whatever property you'd like.
	// You'll be able to access them via \Goji\Security\Passwords::getProperty( key )
	// Demo login credentials are goji@users.goji:goji
}
